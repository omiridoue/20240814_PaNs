quarto add mcanouil/quarto-spotlight
---
title: "Week 2: The Normal Distribution and Estimation"
---
title: "Week 2: The Normal Distribution and Estimation"
---
title: "Week 2: The Normal Distribution and Estimation"
install.packages("webexercises")
library(webexercises)
install.packages("webex")
library(spssstatistics)
studenti <- read_excel("C:/Users/2333157O/Documents/EBBRMS/week2_ebbrms_intro_to_stats/Studenti.xlsx")
library(readxl)
studenti <- read_excel("C:/Users/2333157O/Documents/EBBRMS/week2_ebbrms_intro_to_stats/Studenti.xlsx")
hist(studenti$Height, freq=FALSE)
curve(dnorm(x, mean = mean(studenti$Height), sd = sd(studenti$Height)), add = TRUE, col = "blue", xlab = "Height (in cm)", ylab = "Density",)
hist(studenti$Weight, freq=FALSE)
curve(dnorm(x, mean = mean(studenti$Weight), sd = sd(studenti$Weight)), add = TRUE, col = "blue", xlab = "Weight (in lbs)", ylab = "Density",)
library(plyr)
library(dplyr)
library(tidyr)
studenti$Gender
dfn <- studenti |>
mutate(Gender_num = recode(Gender, "F" = 1, "M" = 2))
select(Gender_num, Weight) |>
pivot_longer(everything())  |>
ddply("Gender", function(x) {
xvar <- seq(min(x$value), max(x$value), length.out = 100)
data.frame(value = xvar,
y = 5 * nrow(x) * dnorm(xvar, mean(x$value), sd(x$value)))
})
View(dfn)
View(dfn)
library(plyr)
library(dplyr)
library(tidyr)
studenti$Gender
dfn <- studenti |>
mutate(Gender_num = recode(Gender, "F" = 1, "M" = 2))
select(Gender_num, Weight) |>
pivot_longer(everything())  |>
ddply("Gender_num", function(x) {
xvar <- seq(min(x$value), max(x$value), length.out = 100)
data.frame(value = xvar,
y = 5 * nrow(x) * dnorm(xvar, mean(x$value), sd(x$value)))
})
library(plyr)
library(dplyr)
library(tidyr)
studenti$Gender
dfn <- studenti |>
mutate(Gender_num = recode(Gender, "F" = 1, "M" = 2)) |>
select(Gender_num, Weight) |>
pivot_longer(everything())  |>
ddply("Gender_num", function(x) {
xvar <- seq(min(x$value), max(x$value), length.out = 100)
data.frame(value = xvar,
y = 5 * nrow(x) * dnorm(xvar, mean(x$value), sd(x$value)))
})
library(plyr)
library(dplyr)
library(tidyr)
studenti$Gender
dfn <- studenti |>
mutate(Gender_num = recode(Gender, "F" = 1, "M" = 2)) |>
select(Gender_num, Weight) |>
pivot_longer(everything())  |>
ddply("Gender_num", function(x) {
xvar <- seq(min(x$value), max(x$value), length.out = 100)
data.frame(value = xvar,
y = 5 * nrow(x) * dnorm(xvar, mean(x$value), sd(x$value)))
})
library(plyr)
library(dplyr)
library(tidyr)
dfn <- studenti |>
mutate(Gender_num = recode(Gender, "F" = 1, "M" = 2)) |>
select(Gender_num, Weight) |>
pivot_longer(everything())  |>
ddply("Gender_num", function(x) {
xvar <- seq(min(x$value), max(x$value), length.out = 100)
data.frame(value = xvar,
y = 5 * nrow(x) * dnorm(xvar, mean(x$value), sd(x$value)))
})
studenti <- read_excel("C:/Users/2333157O/Documents/EBBRMS/week2_ebbrms_intro_to_stats/Studenti.xlsx")
hist(studenti$Height, freq=FALSE)
curve(dnorm(x, mean = mean(studenti$Height), sd = sd(studenti$Height)), add = TRUE, col = "blue", xlab = "Height (in cm)", ylab = "Density",)
library(plyr)
library(dplyr)
library(tidyr)
dfn <- studenti |>
mutate(Gender_num = recode(Gender, "F" = 1, "M" = 2)) |>
select(Gender_num, Weight) |>
pivot_longer(everything())  |>
ddply("Gender_num", function(x) {
xvar <- seq(min(x$value), max(x$value), length.out = 100)
data.frame(value = xvar,
y = 5 * nrow(x) * dnorm(xvar, mean(x$value), sd(x$value)))
})
library(plyr)
library(dplyr)
library(tidyr)
dfn <- studenti |>
mutate(Gender_num = recode(Gender, "F" = 1, "M" = 2)) |>
select(Gender_num, Weight) |>
pivot_longer(everything())  |>
ddply(Gender_num, function(x) {
xvar <- seq(min(x$value), max(x$value), length.out = 100)
data.frame(value = xvar,
y = 5 * nrow(x) * dnorm(xvar, mean(x$value), sd(x$value)))
})
library(plyr)
library(dplyr)
library(tidyr)
dfn <- studenti |>
mutate(Gender_num = recode(Gender, "F" = 1, "M" = 2)) |>
select(Gender_num, Weight) |>
pivot_longer(everything())  |>
ddply(Gender_num, function(x) {
xvar <- seq(min(x$value), max(x$value), length.out = 100)
data.frame(value = xvar,
y = 5 * nrow(x) * dnorm(xvar, mean(x$value), sd(x$value)))
})
library(plyr)
library(dplyr)
library(tidyr)
studenti <- studenti |>
mutate(Gender_num = recode(Gender, "F" = 1, "M" = 2))
ggplot(studenti, aes(x=Weight))+ geom_histogram(binwidth=5, aes(y=..density.., colour=Gender_num, fill= Gender_num), position="identity", alpha=0.5)+xlim(55,125)
library(plyr)
library(dplyr)
library(tidyr)
studenti <- studenti |>
mutate(Gender_num = recode(Gender, "F" = 1, "M" = 2))
require(MASS)       # for fitdistr(...)
get.params <- function(z) with(fitdistr(z,"normal"),estimate[1:2])
df <- aggregate(Weight~Gender, studenti, get.params)
df <- data.frame(Gender=df[,1],df[,2])
x  <- with(studenti, seq(min(Weight),max(Weight),len=100))
gg <- data.frame(Weight=rep(x,nrow(studenti)),df)
gg$y <- with(gg,dnorm(x,mean,sd))
gg$y <- gg$y * aggregate(Weight~Gender, Weight,length)$Weight * diff(range(Weight$Weight))/30
library(plyr)
library(dplyr)
library(tidyr)
studenti <- studenti |>
mutate(Gender_num = recode(Gender, "F" = 1, "M" = 2))
require(MASS)       # for fitdistr(...)
get.params <- function(z) with(fitdistr(z,"normal"),estimate[1:2])
df <- aggregate(Weight~Gender, studenti, get.params)
df <- data.frame(Gender=df[,1],df[,2])
x  <- with(studenti, seq(min(Weight),max(Weight),len=100))
gg <- data.frame(Weight=rep(x,nrow(studenti)),df)
gg$y <- with(gg,dnorm(x,mean,sd))
gg$y <- gg$y * aggregate(Weight~Gender, studenti,length)$Weight * diff(range(Weight$Weight))/30
library(plyr)
library(dplyr)
library(tidyr)
studenti <- studenti |>
mutate(Gender_num = recode(Gender, "F" = 1, "M" = 2))
require(MASS)       # for fitdistr(...)
get.params <- function(z) with(fitdistr(z,"normal"),estimate[1:2])
df <- aggregate(Weight~Gender, studenti, get.params)
df <- data.frame(Gender=df[,1],df[,2])
x  <- with(studenti, seq(min(Weight),max(Weight),len=100))
gg <- data.frame(Weight=rep(x,nrow(studenti)),df)
gg$y <- with(gg,dnorm(x,mean,sd))
gg$y <- gg$y * aggregate(Weight~Gender, studenti,length)$Weight * diff(range(studenti$Weight))/30
ggplot(studenti, aes(x=Weight))+ geom_histogram(binwidth=5, aes(y=..density..,colour=Gender, fill= Gender), position="identity", alpha=0.5)+xlim(55,100) +
geom_line(data=gg, aes(y=y))
library(plyr)
library(dplyr)
library(tidyr)
studenti <- studenti |>
mutate(Gender_num = recode(Gender, "F" = 1, "M" = 2))
require(MASS)       # for fitdistr(...)
get.params <- function(z) with(fitdistr(z,"normal"),estimate[1:2])
df <- aggregate(Weight~Gender, studenti, get.params)
df <- data.frame(Gender=df[,1],df[,2])
x  <- with(studenti, seq(min(Weight),max(Weight),len=100))
gg <- data.frame(Weight=rep(x,nrow(studenti)),df)
gg$y <- with(gg,dnorm(x,mean,sd))
gg$y <- gg$y * aggregate(Weight~Gender, studenti,length)$Weight * diff(range(studenti$Weight))/30
ggplot(studenti, aes(x=Weight))+ geom_histogram(binwidth=5, aes(y=..density..,colour=Gender, fill= Gender), position="identity", alpha=0.5)+xlim(55,100) + stat_function(fun=dnorm, args=list(mean=mean(x), sd=sd(x)), aes(y=..density..,colour=Gender)
library(plyr)
library(dplyr)
library(tidyr)
p <- unique(studenti$Gender)
g <- ggplot(mtcars, aes(x = Weight, fill = Gender, colour = Gender))
install.packages("pdftools")
sessionInfo()
renv::install("psychr")
renv::install("dplyr")
renv::intall("ggplot2")
renv::install("ggplot2")
renv::install("plyr")
renv::install("psych")
renv::install("knitr")
renv::install("readxl")
renv::install("reshape2")
renv::install("tidyr")
renv::install("dplyr")
